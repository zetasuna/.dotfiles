# Reload config file
bind r source-file ~/.config/tmux/tmux.conf \; display "   Reloading..."

# [[ General Configuration ]]===========================================
# Color
set -g @white   "#f8f8f2"
set -g @black   "#282a36"
set -g @orange  "#ffb86c"
set -g @purple  "#bd93f9"
set -g @red     "#ff5555"
set -g @yellow  "#f1fa8c"
set -g @green   "#50fa7b"
set -g @cyan    "#8be9fd"
set -g @pink    "#ff79c6"
set -g @comment "#6272a4"
set -g @select  "#44475a"
set -g @subtle  "#424450"

# General
set -g default-terminal   "tmux-256color"
setw -q -g utf8 on
setw -g mode-keys         vi
set  -g status-keys       vi
set  -g set-clipboard     on
# Super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on
set -sg escape-time       0
# set -sg repeat-time       600 # Make trouble quite noise
set -s  focus-events      on
set  -g monitor-activity  on
set  -g visual-activity   off
set  -g history-limit     50000
set  -g mouse             off
set  -g set-titles        on
set  -g set-titles-string "#(echo ' ')"

set  -g prefix2 Home # Set Home key as second Prefix
bind Home send-prefix -2

# Other mode
set -g clock-mode-style              24
set -g clock-mode-colour             "#bd93f9"
set -g popup-border-lines            double
set -g popup-style                   "fg=#{@white},bg=#{@black}"
set -g popup-border-style            "fg=#{@purple},bg=#{@black}"
set -g mode-style                    "bg=#{@orange},fg=#{@black}"
set -g message-style                 "bg=#{@orange},fg=#{@black}"
set -g message-command-style         "fg=#{@orange},bg=#{@black}"
set -g copy-mode-match-style         "bg=#{@orange},fg=#{@black}"
set -g copy-mode-current-match-style "bg=#{@green},fg=#{@black}"
set -g copy-mode-mark-style          "bg=#{@cyan},fg=#{@black}"

# WINDOW
setw -g automatic-rename on    # rename window to reflect current program
set  -g renumber-windows on    # renumber windows when a window is closed
set  -g status-justify   absolute-centre
setw -g window-status-current-format "#[bg=#{@black},fg=#{@purple},bold]#{?client_prefix,#[fg=#{@green}],}#[fg=#{@black},bg=#{@purple},bold]#{?client_prefix,#[bg=#{@green}]#I #W#{?window_bell_flag, 󰂚 ,}#{?window_zoomed_flag,  ,},#I #W#{?window_bell_flag, 󰂚 ,}#{?window_zoomed_flag,  ,}}#[bg=#{@black},fg=#{@purple},bold]#{?client_prefix,#[fg=#{@green}],}"
setw -g window-status-format "#[bg=#{@black},fg=#{@purple}]\[#I #W#{?window_bell_flag, 󰂚 ,}#{?window_zoomed_flag,  ,}#{?window_last_flag,  ,}\]"

# PANE
set -g base-index                  1     # start windows numbering at 1
setw -g pane-base-index            1     # make pane numbering consistent with windows
set -g display-time                1000  # slightly longer status messages display time
set -g display-panes-time          3000  # slightly longer pane indicators display time
set -g display-panes-active-colour "#50fa7b"
set -g display-panes-colour        "#bd93f9"
set -g pane-border-lines           double
set -g pane-border-style           "bg=#{@black},fg=#{@white}"
set -g pane-active-border-style    "bg=#{@black},fg=#{@purple}"

# STATUS LINE
set -g status          on
set -g status-interval 1  # redraw status line every 10 seconds
set -g status-position top
set -g status-style    "bg=#{@black},fg=#{@purple}"

# LEFT STATUS
set -g status-left-length 20
set -g status-left "#[fg=#{@black},bg=#{@purple},bold]#{?client_prefix,#[bg=#{@green}] #(fish -c 'if string length -q -- (nmcli -f type connection show --active | grep -o vpn | uniq); printf 󰗹 ; else; if string length -q -- (nmcli -f type connection show --active | grep -o wifi | uniq); or string length -q -- (nmcli -f type connection show --active | grep -o ethernet | uniq); printf  ; else; printf  ; end; end')   #S , #(fish -c 'if string length -q -- (nmcli -f type connection show --active | grep -o vpn | uniq); printf 󰗹 ; else; if string length -q -- (nmcli -f type connection show --active | grep -o wifi | uniq); or string length -q -- (nmcli -f type connection show --active | grep -o ethernet | uniq); printf  ; else; printf  ; end; end')   #S }#[bg=#{@black},fg=#{@purple},bold]#{?client_prefix,#[fg=#{@green}],}"

# RIGHT STATUS
set -g status-right-length 20
set -g status-right "#[bg=#{@black},fg=#{@purple},bold]#{?client_prefix,#[fg=#{@green}],}#[fg=#{@black},bg=#{@purple},bold]#{?client_prefix,#[bg=#{@green}] #(cat /sys/class/power_supply/BAT0/capacity)\%  #(fish -c 'if test (cat /sys/class/power_supply/AC/online) -eq 1; echo 󱐋; else; echo 󰂀; end') , #(cat /sys/class/power_supply/BAT0/capacity)\%  #(fish -c 'if test (cat /sys/class/power_supply/AC/online) -eq 1; echo 󱐋; else; echo 󰂀; end') }"


# [[ KEYBINDINGS ]]=====================================================
# Clear screen vs history
# bind -n C-l send-keys C-l \; run 'sleep 0.2' \; clear-history

# bind -n F9 display-popup -T "Fuzzy Finder File" -d "#{pane_current_path}" -E "fd --strip-cwd-prefix -HLc auto -t f | fzf --no-multi | xargs -rI {} tmux new-window -n 'Win#I:File' -c '#{pane_current_path}' nvim {}"

# System clipboard
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "xclip -in -selection clipboard"

# # -- Pane Navigation-----------------------------------------------
# bind -r h select-pane -L  # move left
# bind -r j select-pane -D  # move down
# bind -r k select-pane -U  # move up
# bind -r l select-pane -R  # move right
# bind > swap-pane -D       # swap current pane with the next one
# bind < swap-pane -U       # swap current pane with the previous one
# bind -r H resize-pane -L 2
# bind -r J resize-pane -D 2
# bind -r K resize-pane -U 2
# bind -r L resize-pane -R 2

# # -- Window Navigation---------------------------------------------
# bind C-c new-session        # create session
# bind C-f command-prompt -p find-session 'switch-client -t %%'  # find session
# bind BTab switch-client -l  # move to last session
# bind - split-window -v      # split current window horizontally
# bind _ split-window -h      # split current window vertically
# # window navigation
# unbind n
# unbind p
# bind -r C-h previous-window # select previous window
# bind -r C-l next-window     # select next window
# bind Tab last-window        # move to last active window

# # -- Copy mode ----------------------------------------------------
# bind Enter copy-mode # enter copy mode
# bind -T copy-mode-vi v send -X begin-selection
# bind -T copy-mode-vi C-v send -X rectangle-toggle
# bind -T copy-mode-vi y send -X copy-selection-and-cancel
# bind -T copy-mode-vi Escape send -X cancel
# bind -T copy-mode-vi H send -X start-of-line
# bind -T copy-mode-vi L send -X end-of-line

# # -- Buffers ------------------------------------------------------
# bind b list-buffers     # list paste buffers
# bind p paste-buffer -p  # paste from the top paste buffer
# bind P choose-buffer    # choose which buffer to paste from


# [[ List of plugins ]]=================================================
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'laktak/extrakto'


# [[ Config Plugins ]]==================================================
set -g @resurrect-save 'F3'
set -g @resurrect-restore 'F4'
set -g @resurrect-strategy-vim 'session'   # Restore session for Vim
set -g @resurrect-strategy-nvim 'session'  # Restore session for Neovim
set -g @resurrect-processes 'btop ssh mysql sqlite3 mariadb-client hx lazygit lazydocker'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-dir "$HOME/.config/tmux/resurrect"
# set -g @continuum-boot 'on'
set -g @continuum-restore 'off'
set -g @continuum-save-interval '60' # Minutes: 0 => not autosave; default 15 minutes

# unbind-key -T prefix F
bind-key -n F1 run-shell -b "~/.config/tmux/plugins/tmux-fzf/main.sh"
TMUX_FZF_LAUNCH_KEY="F1"
TMUX_FZF_ORDER="session|window|pane|command|keybinding|clipboard|process"
TMUX_FZF_OPTIONS="-w 100% -h 99% -x R -y S -m --border"
TMUX_FZF_PANE_FORMAT="[#{window_name}] #{pane_current_command}  [#{pane_width}x#{pane_height}] [history #{history_size}/#{history_limit}, #{history_bytes} bytes] #{?pane_active,[active],[inactive]}"
# NOTE: Title in popup cannot contain space character => use black character in nerdfont
# Open not work in Fuzzy Find File !!!
TMUX_FZF_MENU=\
"  Btop                   \n tmux display-popup -E -w 100% -h 99% -x R -y S -T 'Btop' 'sudo btop'\n"\
"  File Manager           \n"\""tmux display-popup -E -w 100% -h 99% -x R -y S -d '#{pane_current_path}' -T 'File Manager' 'fileExplorer'"\""\n"\
"  Fuzzy Find File        \n"\""tmux display-popup -E -w 100% -h 99% -x R -y S -d '#{pane_current_path}' -T '   Fuzzy Find File ' 'fd --strip-cwd-prefix -HLc auto -t f | fzf --height=100% --no-multi | xargs -rI {} tmux new-window -n '\''Win#I:File'\'' -c '\''#{pane_current_path}'\'' nvim {} '"\""\n"\
"  Lazygit                \n"\""tmux display-popup -E -w 100% -h 99% -x R -y S -d '#{pane_current_path}' -T 'Lazygit' 'lazygit'"\""\n"\
"  Parsing Word           \n "\""~/.config/tmux/plugins/extrakto/scripts/open.sh $(tmux display-message -p '#{pane_id}')"\""\n"\
"  Network Manager        \n tmux display-popup -B -E -w 100% -h 99% -x R -y S 'nmtui'\n"\
"  ProtonVPN Connect      \n tmux display-popup -B -E -w 100% -h 99% -x R -y S 'protonvpn-cli connect'\n"\
"  ProtonVPN Fast Connect \n tmux display-popup -T '[ProtonVPN]Connecting...'    'protonvpn-cli connect -fp tcp'\n"\
"  ProtonVPN Disconnect   \n tmux display-popup -T '[ProtonVPN]Disconnecting...' 'protonvpn-cli disconnect'\n"\
"  1.1.1.1 Connect        \n tmux display-popup -T '[1.1.1.1]Connecting...'      'warp-cli connect' \n"\
"  1.1.1.1 Disconnect     \n tmux display-popup -T '[1.1.1.1]Disconnecting...'   'warp-cli disconnect' \n"\
"  Session Save           \n ~/.config/tmux/plugins/tmux-resurrect/scripts/save.sh\n"\
"  Session Restore        \n ~/.config/tmux/plugins/tmux-resurrect/scripts/restore.sh\n"

# unbind-key -T prefix Tab
set -g @extrakto_key "F2"
set -g @extrakto_grab_area 'window full'
set -g @extrakto_filter_order "word line path url quote s-quote"
# set -g @extrakto_copy_key   "tab"    # use tab to copy to clipboard
# set -g @extrakto_insert_key "enter"  # use enter to insert selection
# set -g @extrakto_filter_key "ctrl-f"
# set -g @extrakto_grab_key   "ctrl-g"
# set -g @extrakto_edit_key   "ctrl-e"
# set -g @extrakto_iopen_key  "ctrl-o"
set -g @extrakto_clip_tool_run "tmux_osc52"
set -g @extrakto_clip_tool "auto"
# set -g @extrakto_editor "nvim"
set -g @extrakto_open_tool "auto"
set -g @extrakto_fzf_tool "fzf_extrakto"
set -g @extrakto_fzf_layout "reverse"
set -g @extrakto_fzf_header "f g i c o e h"
set -g @extrakto_fzf_unset_default_opts "false"
set -g @extrakto_popup_position "R,S"
set -g @extrakto_popup_size "100%,99%"
set -g @extrakto_split_direction "p" # [a]uto, [p]opup, [v]ertical, [h]orizontal
set -g @extrakto_split_size "7"

# Initialize TMUX plugin manager (keep this line at bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'
