#!/usr/bin/sh

# General {{{
sudo apt -y install zsh curl wget unzip man make cmake gcc automake autoconf pkg-config fontconfig gettext lshw btop fd-find fq jq yq xq bat tldr # i3 kitty nitrogen picom firefox-esr youtube-dl vlc 7zip

sudo apt -y install xorg xinit x11-xserver-utils fswatch build-essential ninja-build libxft-dev libx11-dev libxrandr-dev libxinerama-dev libimlib2-dev libevent-dev ncurses-dev bison 

# Rust
curl https://sh.rustup.rs -sSf | sh 

# Zsh
rm -f /home/$USER/.zshrc
ln -s /home/$USER/.dotfiles/.zshrc /home/$USER/.zshrc
chsh -s $(which zsh)
exec zsh

# Vim
#rm -f /home/$USER/.vimrc
#ln -s /home/$USER/.dotfiles/.vimrc /home/$USER/.vimrc
#}}}

# .config {{{
if [ ! -d "/home/$USER/.config" ]; then
	mkdir -p /home/$USER/.config
fi

# Suckless {{{
#if [ ! -d "/home/$USER/.config/suckless" ]; then
#	git clone https://github.com/bakkeby/dwm-flexipatch.git   /home/$USER/.config/suckless/dwm
#	git clone https://github.com/bakkeby/st-flexipatch.git    /home/$USER/.config/suckless/st
#	git clone https://github.com/bakkeby/dmenu-flexipatch.git /home/$USER/.config/suckless/dmenu
#	git clone https://github.com/bakkeby/slock-flexipatch.git /home/$USER/.config/suckless/slock
#	git clone https://git.suckless.org/slstatus               /home/$USER/.config/suckless/slstatus
#fi
#rm -f /home/$USER/.config/suckless/dwm/config.h
#rm -f /home/$USER/.config/suckless/st/config.h
#rm -f /home/$USER/.config/suckless/dmenu/config.h
#rm -f /home/$USER/.config/suckless/slock/config.h
#ln -s /home/$USER/.dotfiles/suckless/dwm_config.h   /home/$USER/.config/suckless/dwm/config.h
#ln -s /home/$USER/.dotfiles/suckless/st_config.h    /home/$USER/.config/suckless/st/config.h
#ln -s /home/$USER/.dotfiles/suckless/dmenu_config.h /home/$USER/.config/suckless/dmenu/config.h
#ln -s /home/$USER/.dotfiles/suckless/slock_config.h /home/$USER/.config/suckless/slock/config.h
#if [ ! -d "/home/$USER/.config/suckless" ]; then
#	ln -s /home/$USER/.dotfiles/suckless /home/$USER/.config/suckless
#fi
#sudo make -C "/home/$USER/.config/suckless/dwm"      clean install
#sudo make -C "/home/$USER/.config/suckless/st"       clean install
#sudo make -C "/home/$USER/.config/suckless/dmenu"    clean install
#sudo make -C "/home/$USER/.config/suckless/slock"    clean install
#sudo make -C "/home/$USER/.config/suckless/slstatus" clean install
#rm -f /home/$USER/.xinitrc
#ln -s /home/$USER/.dotfiles/.xinitrc /home/$USER/.xinitrc
#	echo "startx" >> .profile
#}}}

# Zsh Plugin
if [ ! -d "/home/$USER/.config/powerlevel10k" ]; then
	git clone --depth=1 https://github.com/romkatv/powerlevel10k.git /home/$USER/.config/powerlevel10k
fi

#if [ ! -d "/home/$USER/.config/zsh-autocomplete" ]; then
#	git clone --depth 1 -- https://github.com/marlonrichert/zsh-autocomplete.git /home/$USER/.config/zsh-autocomplete
#fi

if [ ! -d "/home/$USER/.config/zsh-completions" ]; then
	git clone https://github.com/zsh-users/zsh-completions.git /home/$USER/.config/zsh-completions
fi

if [ ! -d "/home/$USER/.config/fzf-tab" ]; then
	git clone https://github.com/Aloxaf/fzf-tab /home/$USER/.config/fzf-tab
fi

if [ ! -d "/home/$USER/.config/navi" ]; then
	git clone https://github.com/denisidoro/navi /home/$USER/.config/navi
	cd /home/$USER/.config/navi
	sudo make BIN_DIR=/usr/local/bin install
	cd /home/$USER
fi

if [ ! -d "/home/$USER/.config/zsh-autosuggestions" ]; then
	git clone https://github.com/zsh-users/zsh-autosuggestions /home/$USER/.config/zsh-autosuggestions
fi

if [ ! -d "/home/$USER/.config/zsh-syntax-highlighting" ]; then
	git clone https://github.com/zsh-users/zsh-syntax-highlighting.git /home/$USER/.config/zsh-syntax-highlighting
fi

# Neovim
if [ ! -d "/home/$USER/.config/neovim" ]; then
	git clone https://github.com/neovim/neovim /home/$USER/.config/neovim
	cd /home/$USER/.config/neovim && make CMAKE_BUILD_TYPE=Release
	sudo make install
	cd /home/$USER
fi

# Lazyvim
if [ ! -d "/home/$USER/.config/nvim" ]; then
	# required
	mv ~/.config/nvim{,.bak}

	# optional but recommended
	mv ~/.local/share/nvim{,.bak}
	mv ~/.local/state/nvim{,.bak}
	mv ~/.cache/nvim{,.bak}	

	# Clone
	git clone https://github.com/LazyVim/starter /home/$USER/.config/nvim	
	rm -rf /home/$USER/.config/nvim/.git
fi

# Tmux
if [ ! -d "/home/$USER/.config/tmux" ]; then
	git clone https://github.com/tmux/tmux.git /home/$USER/.config/tmux
	cd /home/$USER/.config/tmux
	sh ./autogen.sh
	sh ./configure --enable-sixel
	sudo make install
	cd /home/$USER
fi

# Fzf
if [ ! -d "/home/$USER/.config/fzf" ]; then
	git clone --depth 1 https://github.com/junegunn/fzf.git /home/$USER/.config/fzf
	cd /home/$USER/.config/fzf && ./install
	cd /home/$USER
	# Update fzf
	# cd /home/$USER/.config/fzf && git pull && ./install
fi

# Lazygit
if [ ! -d "/home/$USER/.config/lazygit" ]; then
	mkdir -p /home/$USER/.config/lazygit
	LAZYGIT_VERSION=$(curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | grep -Po '"tag_name": "v\K[^"]*')
	curl -Lo /home/$USER/.config/lazygit/lazygit.tar.gz "https://github.com/jesseduffield/lazygit/releases/latest/download/lazygit_${LAZYGIT_VERSION}_Linux_x86_64.tar.gz"
	tar -xf /home/$USER/.config/lazygit/lazygit.tar.gz -C /home/$USER/.config/lazygit
	sudo install /home/$USER/.config/lazygit/lazygit /usr/local/bin
fi

# Ripgrep
if [ ! -d "/home/$USER/.config/ripgrep" ]; then
	mkdir -p /home/$USER/.config/ripgrep
	curl -Lo /home/$USER/.config/ripgrep/ripgrep_14.1.0_amd64.deb  https://github.com/BurntSushi/ripgrep/releases/download/14.1.0/ripgrep_14.1.0_amd64.deb
	sudo dpkg -i /home/$USER/.config/ripgrep/ripgrep_14.1.0_amd64.deb
fi
#}}}

# .local/share {{{
if [ ! -d "/home/$USER/.local/share" ]; then
	mkdir -p /home/$USER/.local/share
fi
# Font
rm -rf /home/$USER/.local/share/fonts
ln -s /home/$USER/.dotfiles/fonts /home/$USER/.local/share/fonts
fc-cache -fv
chmod +x /home/$USER/.local/share/test-fonts.sh
#}}}


